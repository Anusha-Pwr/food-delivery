{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anusha\\\\Desktop\\\\React revisio\\\\PracticeProj-2\\\\01-starting-project\\\\src\\\\Components\\\\Cart\\\\OrderForm\\\\OrderForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport classes from \"./OrderForm.module.css\";\nimport useInput from \"../../../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderForm = props => {\n  _s();\n  const {\n    value: name,\n    isValid: nameIsValid,\n    error: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: nameReset\n  } = useInput(val => val.trim() !== \"\");\n\n  // const [name, setName] = useState(\"\");\n  // const [nameIsTouched, setNameIsTouched] = useState(false);\n\n  // const nameIsValid = name.trim() !== \"\";\n  // const nameIsInvalid = !nameIsValid && nameIsTouched;\n\n  // function nameChangeHandler(event) {\n  //     setName(event.target.value);\n  // }\n\n  // function nameBlurHandler(event) {\n  //     setNameIsTouched(true);\n  // }\n\n  const {\n    value: street,\n    isValid: streetIsValid,\n    error: streetHasError,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    reset: streetReset\n  } = useInput(val => val.trim() !== \"\");\n\n  // const [street, setStreet] = useState(\"\");\n  // const [streetIsTouched, setStreetIsTouched] = useState(false);\n\n  // const streetIsValid = street.trim() !== \"\";\n  // const streetIsInvalid = !streetIsValid && streetIsTouched;\n\n  // function streetChangeHandler(event) {\n  //     setStreet(event.target.value);\n  // }\n\n  // function streetBlurHandler(event) {\n  //     setStreetIsTouched(true);\n  // }\n\n  let formIsValid = false;\n  if (nameIsValid && streetIsValid) {\n    formIsValid = true;\n  }\n  const [code, setCode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  // function codeChangeHandler(event) {\n  //     setCode(event.target.value);\n  // }\n\n  // function cityChangeHandler(event) {\n  //     setCity(event.target.value);\n  // }\n\n  const handleOrderForm = event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    console.log(name);\n    nameReset();\n    // setName(\"\");\n    // setNameIsTouched(false);\n\n    setStreet(\"\");\n    setStreetIsTouched(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleOrderForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${nameHasError && classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: name,\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Enter a valid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${streetHasError && classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"address\",\n        type: \"text\",\n        value: street,\n        onChange: streetChangeHandler,\n        onBlur: streetBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), streetHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: \"Enter a valid street.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Check-Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 13\n  }, this);\n};\n_s(OrderForm, \"zdcLjrfoMJtV7LOXnLUZBCtNM0g=\", false, function () {\n  return [useInput, useInput];\n});\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["useState","classes","useInput","jsxDEV","_jsxDEV","OrderForm","props","_s","value","name","isValid","nameIsValid","error","nameHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","nameReset","val","trim","street","streetIsValid","streetHasError","streetChangeHandler","streetBlurHandler","streetReset","formIsValid","code","setCode","city","setCity","handleOrderForm","event","preventDefault","console","log","setStreet","setStreetIsTouched","className","form","onSubmit","children","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onBlur","errorText","actions","disabled","onClick","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Anusha/Desktop/React revisio/PracticeProj-2/01-starting-project/src/Components/Cart/OrderForm/OrderForm.jsx"],"sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport classes from \"./OrderForm.module.css\";\r\nimport useInput from \"../../../hooks/use-input\";\r\n\r\nconst OrderForm = (props) => {\r\n\r\n    const {\r\n        value: name,\r\n        isValid: nameIsValid,\r\n        error: nameHasError,\r\n        valueChangeHandler: nameChangeHandler,\r\n        inputBlurHandler: nameBlurHandler,\r\n        reset: nameReset\r\n    } = useInput(val => val.trim()!==\"\");\r\n\r\n    // const [name, setName] = useState(\"\");\r\n    // const [nameIsTouched, setNameIsTouched] = useState(false);\r\n\r\n    // const nameIsValid = name.trim() !== \"\";\r\n    // const nameIsInvalid = !nameIsValid && nameIsTouched;\r\n\r\n    // function nameChangeHandler(event) {\r\n    //     setName(event.target.value);\r\n    // }\r\n\r\n    // function nameBlurHandler(event) {\r\n    //     setNameIsTouched(true);\r\n    // }\r\n\r\n    const {\r\n        value: street,\r\n        isValid: streetIsValid,\r\n        error: streetHasError,\r\n        valueChangeHandler: streetChangeHandler,\r\n        inputBlurHandler: streetBlurHandler,\r\n        reset: streetReset\r\n    } = useInput(val => val.trim()!==\"\");\r\n\r\n   \r\n\r\n    // const [street, setStreet] = useState(\"\");\r\n    // const [streetIsTouched, setStreetIsTouched] = useState(false);\r\n\r\n    // const streetIsValid = street.trim() !== \"\";\r\n    // const streetIsInvalid = !streetIsValid && streetIsTouched;\r\n\r\n    // function streetChangeHandler(event) {\r\n    //     setStreet(event.target.value);\r\n    // }\r\n\r\n    // function streetBlurHandler(event) {\r\n    //     setStreetIsTouched(true);\r\n    // }\r\n\r\n    let formIsValid = false;\r\n\r\n    if(nameIsValid && streetIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n\r\n    const [code, setCode] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n\r\n\r\n   \r\n\r\n    \r\n\r\n    // function codeChangeHandler(event) {\r\n    //     setCode(event.target.value);\r\n    // }\r\n\r\n    // function cityChangeHandler(event) {\r\n    //     setCity(event.target.value);\r\n    // }\r\n\r\n    const handleOrderForm = (event) => {\r\n        event.preventDefault();\r\n\r\n      \r\n        if(!formIsValid) {\r\n            return;\r\n        }\r\n        console.log(name);\r\n        nameReset();\r\n        // setName(\"\");\r\n        // setNameIsTouched(false);\r\n        \r\n        setStreet(\"\");\r\n        setStreetIsTouched(false);        \r\n    }\r\n\r\n    return (\r\n        \r\n            <form className={classes.form} onSubmit={handleOrderForm}>\r\n                <div className={`${classes.control} ${nameHasError && classes.invalid}`}>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" type=\"text\" value={name} onChange={nameChangeHandler} onBlur={nameBlurHandler} />\r\n                    {nameHasError && <p className={classes.errorText}>Enter a valid name.</p>}\r\n                </div>\r\n\r\n                 <div className={`${classes.control} ${streetHasError && classes.invalid}`}>\r\n                    <label htmlFor=\"address\">Street</label>\r\n                    <input id=\"address\" type=\"text\" value={street} onChange={streetChangeHandler} onBlur={streetBlurHandler} />\r\n                    {streetHasError && <p className={classes.errorText}>Enter a valid street.</p>}\r\n                </div>\r\n\r\n                {/*<div className={classes.control}>\r\n                    <label htmlFor=\"postal-code\">Postal Code</label>\r\n                    <input id=\"postal-code\" type=\"text\" value={code} onChange={codeChangeHandler} />\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor=\"city\">City</label>\r\n                    <input id=\"city\" type=\"text\" value={city} onChange={cityChangeHandler} />\r\n                </div> */}\r\n\r\n                <div className={classes.actions}>\r\n                    <button disabled={!formIsValid}>Check-Out</button>\r\n                    <button onClick={props.onCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default OrderForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}